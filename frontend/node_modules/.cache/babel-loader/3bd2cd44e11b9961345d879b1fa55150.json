{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arnau\\\\Desktop\\\\OCRES\\\\Dev Web\\\\Repository\\\\PROJECT_WEB_OCRES\\\\frontend\\\\src\\\\components\\\\PlanningComp.js\";\nimport React from \"react\";\nimport ApiCalendar from \"react-google-calendar-api\";\nexport default class PlanningComp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sign: ApiCalendar.sign\n    };\n    this.signUpdate = this.signUpdate.bind(this);\n    ApiCalendar.onLoad(() => {\n      ApiCalendar.listenSign(this.signUpdate);\n    });\n    this.handleItemClick = this.handleItemClick.bind(this);\n  }\n\n  signUpdate(sign) {\n    this.setState({\n      sign\n    }, () => console.log(this.state.sign));\n  }\n\n  handleItemClick(event, name) {\n    if (name === \"sign-in\") {\n      ApiCalendar.handleAuthClick();\n      console.log(\"logged in\");\n    } else if (name === \"sign-out\") {\n      ApiCalendar.handleSignoutClick();\n      console.log(\"logged out\");\n    }\n  }\n\n  async getUserInfo() {\n    if (ApiCalendar.sign) {\n      const response = await ApiCalendar.getBasicUserProfile();\n      console.log(response);\n    }\n  }\n\n  listUpcomingEvents() {\n    if (ApiCalendar.sign) ApiCalendar.listUpcomingEvents(10).then(_ref => {\n      let {\n        result\n      } = _ref;\n      console.log(\"upcomsing events\", result.items);\n    });\n  }\n\n  listAllEvents() {\n    if (ApiCalendar.sign) ApiCalendar.listEvents({\n      timeMin: new Date().toISOString(),\n      timeMax: new Date().addDays(10).toISOString(),\n      maxResults: 10,\n      orderBy: \"updated\"\n    }).then(_ref2 => {\n      let {\n        result\n      } = _ref2;\n      console.log(result.items);\n    });\n  }\n\n  updateEvent() {\n    const eId = \"7eppmkfbhi4gtvvapv9hvej1lm\";\n    const event = {\n      summary: \"changed name to meet30june for demo purposes\"\n    };\n    ApiCalendar.updateEvent(event, eId).then(res => {\n      console.log(res);\n    });\n    ApiCalendar.getEvent(eId).then(console.log);\n  }\n\n  createEventFromNow() {\n    const eventFromNow = {\n      summary: \"Poc Dev From Now\",\n      time: 180\n    };\n    ApiCalendar.createEventFromNow(eventFromNow).then(response => console.log(response)).catch(err => console.log(err));\n  }\n\n  createEvent() {\n    let stDate = \"2021-12-03T12:00:00+05:30\";\n    let endDate = \"2021-12-03T15:00:00+05:30\";\n    const event = {\n      summary: \"new event created\",\n      description: \"demo of create event function\",\n      start: {\n        dateTime: stDate\n      },\n      end: {\n        dateTime: endDate\n      }\n    };\n    ApiCalendar.createEvent(event).then(res => console.log(res)).catch(err => console.log(err));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: e => this.handleItemClick(e, \"sign-in\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }, \"sign-in\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: e => this.handleItemClick(e, \"sign-out\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    }, \"sign-out\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: e => this.getUserInfo(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }\n    }, \"get user info\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: e => this.listUpcomingEvents(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }\n    }, \"list upcoming events\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: e => this.listAllEvents(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }\n    }, \"list all events\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: e => this.updateEvent(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }\n    }, \"update an Event\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: e => this.createEventFromNow(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }\n    }, \"create an Event from now\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: e => this.createEvent(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }\n    }, \"create an Event\"));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/arnau/Desktop/OCRES/Dev Web/Repository/PROJECT_WEB_OCRES/frontend/src/components/PlanningComp.js"],"names":["React","ApiCalendar","PlanningComp","Component","constructor","props","state","sign","signUpdate","bind","onLoad","listenSign","handleItemClick","setState","console","log","event","name","handleAuthClick","handleSignoutClick","getUserInfo","response","getBasicUserProfile","listUpcomingEvents","then","result","items","listAllEvents","listEvents","timeMin","Date","toISOString","timeMax","addDays","maxResults","orderBy","updateEvent","eId","summary","res","getEvent","createEventFromNow","eventFromNow","time","catch","err","createEvent","stDate","endDate","description","start","dateTime","end","render","e"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport ApiCalendar from \"react-google-calendar-api\";\r\n\r\nexport default class PlanningComp extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n       sign: ApiCalendar.sign\r\n    };\r\n\r\n     this.signUpdate = this.signUpdate.bind(this);\r\n     ApiCalendar.onLoad(() => {\r\n       ApiCalendar.listenSign(this.signUpdate);\r\n     });\r\n\r\n    this.handleItemClick = this.handleItemClick.bind(this);\r\n  }\r\n\r\n   signUpdate(sign) {\r\n     this.setState({ sign }, () => console.log(this.state.sign));\r\n   }\r\n\r\n  handleItemClick(event, name) {\r\n    if (name === \"sign-in\") {\r\n      ApiCalendar.handleAuthClick();\r\n      console.log(\"logged in\");\r\n    } else if (name === \"sign-out\") {\r\n      ApiCalendar.handleSignoutClick();\r\n      console.log(\"logged out\");\r\n    }\r\n  }\r\n\r\n  async getUserInfo() {\r\n    if (ApiCalendar.sign) {\r\n      const response = await ApiCalendar.getBasicUserProfile();\r\n      console.log(response);\r\n    }\r\n  }\r\n\r\n  listUpcomingEvents() {\r\n    if (ApiCalendar.sign)\r\n      ApiCalendar.listUpcomingEvents(10).then(({ result }) => {\r\n        console.log(\"upcomsing events\", result.items);\r\n      });\r\n  }\r\n\r\n  listAllEvents() {\r\n    if (ApiCalendar.sign)\r\n      ApiCalendar.listEvents({\r\n         timeMin: new Date().toISOString(),\r\n         timeMax: new Date().addDays(10).toISOString(),\r\n        maxResults: 10,\r\n        orderBy: \"updated\"\r\n      }).then(({ result }) => {\r\n        console.log(result.items);\r\n      });\r\n  }\r\n\r\n  updateEvent() {\r\n    const eId = \"7eppmkfbhi4gtvvapv9hvej1lm\";\r\n    const event = {\r\n      summary: \"changed name to meet30june for demo purposes\"\r\n    };\r\n    ApiCalendar.updateEvent(event, eId).then((res) => {\r\n      console.log(res);\r\n    });\r\n\r\n    ApiCalendar.getEvent(eId).then(console.log);\r\n  }\r\n\r\n  createEventFromNow() {\r\n    const eventFromNow = {\r\n      summary: \"Poc Dev From Now\",\r\n      time: 180\r\n    };\r\n\r\n    ApiCalendar.createEventFromNow(eventFromNow)\r\n      .then((response) => console.log(response))\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  createEvent() {\r\n    let stDate = \"2021-12-03T12:00:00+05:30\";\r\n    let endDate = \"2021-12-03T15:00:00+05:30\";\r\n    const event = {\r\n      summary: \"new event created\",\r\n      description: \"demo of create event function\",\r\n      start: {\r\n        dateTime: stDate\r\n      },\r\n      end: {\r\n        dateTime: endDate\r\n      }\r\n    };\r\n\r\n    ApiCalendar.createEvent(event)\r\n      .then((res) => console.log(res))\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <button onClick={(e) => this.handleItemClick(e, \"sign-in\")}>\r\n          sign-in\r\n        </button>\r\n        <button onClick={(e) => this.handleItemClick(e, \"sign-out\")}>\r\n          sign-out\r\n        </button>\r\n        <button onClick={(e) => this.getUserInfo()}>get user info</button>\r\n        <button onClick={(e) => this.listUpcomingEvents()}>\r\n          list upcoming events\r\n        </button>\r\n        <button onClick={(e) => this.listAllEvents()}>list all events</button>\r\n        <button onClick={(e) => this.updateEvent()}>update an Event</button>\r\n        <button onClick={(e) => this.createEventFromNow()}>\r\n          create an Event from now\r\n        </button>\r\n        <button onClick={(e) => this.createEvent()}>create an Event</button>\r\n        {/* <div>{`${this.state.sign ? \"true\" : \"false\"}`}</div> */}\r\n      </>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}