{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\coren\\\\Desktop\\\\ING4 S7\\\\TECHNO WEB\\\\PROJET\\\\PROJECT_WEB_OCRES\\\\frontend\\\\src\\\\pages\\\\Sondages.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Scroll from '../components/Scroll';\nimport Logo from '../components/Logo';\nimport Navigation from '../components/Navigation';\nimport \"../style/pages/_sondages.scss\";\nimport data from '../json/data.json';\nimport 'chart.js/auto';\nimport { Pie } from 'react-chartjs-2';\n\nconst Sondages = () => {\n  const [voteData, setVoteData] = useState();\n  const [totalVotes, setTotalVotes] = useState(0);\n  const [voted, setVoted] = useState(false);\n  const url = \"http://localhost:3000/poll\";\n  useEffect(() => {\n    fetch(url).then(response => response.json()).then(data => {\n      setVoteData(data);\n      let sum = 0;\n      data.forEach(function (obj) {\n        sum += obj.votes;\n      });\n      setTotalVotes(sum);\n    });\n  }, []);\n\n  const submitVote = e => {\n    if (voted === false) {\n      const voteSelected = e.target.dataset.id;\n      const voteCurrent = voteData[voteSelected].votes;\n      voteData[voteSelected].votes = voteCurrent + 1;\n      setTotalVotes(totalVotes + 1);\n      setVoted(!voted);\n      const options = {\n        method: \"POST\",\n        body: JSON.stringify(voteData),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      fetch(url, options).then(res => res.json()).then(res => console.log(res));\n    }\n  };\n\n  let pollOptions;\n\n  if (voteData) {\n    pollOptions = voteData.map(item => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        key: item.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: submitVote,\n        \"data-id\": item.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }\n      }, item.option, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }\n      }, \"- \", item.votes, \" Votes\"))));\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"widget\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Logo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Navigation, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Scroll, {\n    left: '/structure',\n    right: '/contact',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"poll\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, \"Parmi ces Events, lesquels as-tu pr\\xE9f\\xE9r\\xE9 ?\"), /*#__PURE__*/React.createElement(\"ul\", {\n    className: voted ? \"results\" : \"options\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, pollOptions), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, \"Total Votes: \", totalVotes)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pie\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(Pie, {\n    data: {\n      labels: ['Les Grands Tournois !', 'Les Inter-membres !', 'Les Afterworks !', 'Les Tournois Online !'],\n      datasets: [{\n        labels: '# of votes',\n        data: [data[0].votes, data[1].votes, data[2].votes, data[3].votes],\n        //RECUPERER LES DATAS DEPUIS UN GET \n        backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#8bc34a'],\n        borderWidth: 1\n      }]\n    },\n    options: {\n      responsive: true,\n      maintainAspectRatio: false,\n      scales: {\n        yAxes: [{\n          ticks: {\n            beginAtZero: true\n          }\n        }]\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  })));\n};\n\nexport default Sondages;","map":{"version":3,"sources":["C:/Users/coren/Desktop/ING4 S7/TECHNO WEB/PROJET/PROJECT_WEB_OCRES/frontend/src/pages/Sondages.js"],"names":["React","useState","useEffect","Scroll","Logo","Navigation","data","Pie","Sondages","voteData","setVoteData","totalVotes","setTotalVotes","voted","setVoted","url","fetch","then","response","json","sum","forEach","obj","votes","submitVote","e","voteSelected","target","dataset","id","voteCurrent","options","method","body","JSON","stringify","headers","res","console","log","pollOptions","map","item","option","labels","datasets","backgroundColor","borderWidth","responsive","maintainAspectRatio","scales","yAxes","ticks","beginAtZero"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Scroll from '../components/Scroll';\r\nimport Logo from '../components/Logo';\r\nimport Navigation from '../components/Navigation';\r\nimport \"../style/pages/_sondages.scss\";\r\nimport data from '../json/data.json';\r\nimport 'chart.js/auto';\r\nimport {Pie} from 'react-chartjs-2';\r\n\r\nconst Sondages = () => {\r\n\r\n    const [voteData, setVoteData] = useState();\r\n    const [totalVotes, setTotalVotes] = useState(0);\r\n    const [voted, setVoted] = useState(false);\r\n\r\n  const url = \"http://localhost:3000/poll\";\r\n  useEffect(() => {\r\n    fetch(url)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setVoteData(data);\r\n        let sum = 0;\r\n        data.forEach(function (obj) {\r\n          sum += obj.votes;\r\n        });\r\n        setTotalVotes(sum);\r\n      });\r\n  }, []);\r\n\r\n  const submitVote = (e) => {\r\n    if(voted === false) {\r\n      const voteSelected = e.target.dataset.id;\r\n      const voteCurrent = voteData[voteSelected].votes;\r\n      voteData[voteSelected].votes = voteCurrent + 1;\r\n      setTotalVotes(totalVotes + 1);\r\n      setVoted(!voted);\r\n      const options = {\r\n        method: \"POST\",\r\n        body: JSON.stringify(voteData),\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n      };\r\n      fetch(url, options)\r\n        .then((res) => res.json())\r\n        .then((res) => console.log(res));\r\n    }\r\n  };  \r\n  let pollOptions;\r\n  if (voteData) {\r\n    pollOptions = voteData.map((item) => {\r\n      return (\r\n        <div>\r\n        <li key={item.id}>\r\n          <button onClick={submitVote} data-id={item.id}>\r\n            {item.option}\r\n            <span>- {item.votes} Votes</span>\r\n          </button>          \r\n        </li>\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n\r\n  return (\r\n    \r\n    <div className=\"widget\">\r\n          <Logo />\r\n          <Navigation />\r\n          <Scroll left={'/structure'} right={'/contact'} />\r\n        <div className=\"poll\">\r\n      <h1>Parmi ces Events, lesquels as-tu préféré ?</h1>\r\n      <ul className={voted ? \"results\" : \"options\"}>\r\n          {pollOptions}\r\n          </ul>\r\n      <p>Total Votes: {totalVotes}</p>\r\n       </div>\r\n       <div className=\"pie\">\r\n            <Pie\r\n            \r\n            data={{\r\n                labels: ['Les Grands Tournois !', 'Les Inter-membres !', 'Les Afterworks !', 'Les Tournois Online !'],\r\n                datasets: [\r\n                  {\r\n                      labels: '# of votes',\r\n                      data: [data[0].votes, data[1].votes, data[2].votes, data[3].votes],\r\n                      //RECUPERER LES DATAS DEPUIS UN GET \r\n                      backgroundColor: ['#FF6384','#36A2EB','#FFCE56','#8bc34a',],\r\n                      borderWidth: 1,\r\n                  },\r\n              ],\r\n          }}\r\n          options={{\r\n            responsive: true,\r\n            maintainAspectRatio: false,\r\n                scales: {\r\n                  yAxes: [\r\n                      {\r\n                        ticks: {\r\n                            beginAtZero: true,\r\n                        },\r\n                    },\r\n                    ],\r\n              },\r\n          }}\r\n        />\r\n        </div>\r\n    </div>\r\n  );\r\n  \r\n}\r\n\r\nexport default Sondages;"]},"metadata":{},"sourceType":"module"}