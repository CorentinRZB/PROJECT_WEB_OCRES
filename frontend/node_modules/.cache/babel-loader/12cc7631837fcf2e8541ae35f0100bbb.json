{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nvar Config = require('../../../apiGoogleconfig.json');\n\nvar ApiCalendar = function () {\n  function ApiCalendar() {\n    _classCallCheck(this, ApiCalendar);\n\n    this.sign = false;\n    this.gapi = null;\n    this.onLoadCallback = null;\n    this.calendar = 'primary';\n\n    try {\n      this.updateSigninStatus = this.updateSigninStatus.bind(this);\n      this.initClient = this.initClient.bind(this);\n      this.handleSignoutClick = this.handleSignoutClick.bind(this);\n      this.handleAuthClick = this.handleAuthClick.bind(this);\n      this.createEvent = this.createEvent.bind(this);\n      this.listUpcomingEvents = this.listUpcomingEvents.bind(this);\n      this.listEvents = this.listEvents.bind(this);\n      this.createEventFromNow = this.createEventFromNow.bind(this);\n      this.listenSign = this.listenSign.bind(this);\n      this.onLoad = this.onLoad.bind(this);\n      this.setCalendar = this.setCalendar.bind(this);\n      this.updateEvent = this.updateEvent.bind(this);\n      this.deleteEvent = this.deleteEvent.bind(this);\n      this.getEvent = this.getEvent.bind(this);\n      this.getBasicUserProfile = this.getBasicUserProfile.bind(this);\n      this.handleClientLoad();\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  /**\r\n   * Update connection status.\r\n   * @param {boolean} isSignedIn\r\n   */\n\n\n  _createClass(ApiCalendar, [{\n    key: 'updateSigninStatus',\n    value: function updateSigninStatus(isSignedIn) {\n      this.sign = isSignedIn;\n    }\n    /**\r\n     * Auth to the google Api.\r\n     */\n\n  }, {\n    key: 'initClient',\n    value: function initClient() {\n      var _this = this;\n\n      this.gapi = window['gapi'];\n      this.gapi.client.init(Config).then(function () {\n        // Listen for sign-in state changes.\n        _this.gapi.auth2.getAuthInstance().isSignedIn.listen(_this.updateSigninStatus); // Handle the initial sign-in state.\n\n\n        _this.updateSigninStatus(_this.gapi.auth2.getAuthInstance().isSignedIn.get());\n\n        if (_this.onLoadCallback) {\n          _this.onLoadCallback();\n        }\n      }).catch(function (e) {\n        console.log(e);\n      });\n    }\n    /**\r\n     * Init Google Api\r\n     * And create gapi in global\r\n     */\n\n  }, {\n    key: 'handleClientLoad',\n    value: function handleClientLoad() {\n      var _this2 = this;\n\n      this.gapi = window['gapi'];\n      var script = document.createElement('script');\n      script.src = 'https://apis.google.com/js/api.js';\n      document.body.appendChild(script);\n\n      script.onload = function () {\n        window['gapi'].load('client:auth2', _this2.initClient);\n      };\n    }\n    /**\r\n     * Sign in Google user account\r\n     */\n\n  }, {\n    key: 'handleAuthClick',\n    value: function handleAuthClick() {\n      if (this.gapi) {\n        this.gapi.auth2.getAuthInstance().signIn();\n      } else {\n        console.log('Error: this.gapi not loaded');\n      }\n    }\n    /**\r\n     * Set the default attribute calendar\r\n     * @param {string} newCalendar\r\n     */\n\n  }, {\n    key: 'setCalendar',\n    value: function setCalendar(newCalendar) {\n      this.calendar = newCalendar;\n    }\n    /**\r\n     * Execute the callback function when a user is disconnected or connected with the sign status.\r\n     * @param callback\r\n     */\n\n  }, {\n    key: 'listenSign',\n    value: function listenSign(callback) {\n      if (this.gapi) {\n        this.gapi.auth2.getAuthInstance().isSignedIn.listen(callback);\n      } else {\n        console.log('Error: this.gapi not loaded');\n      }\n    }\n    /**\r\n     * Execute the callback function when gapi is loaded\r\n     * @param callback\r\n     */\n\n  }, {\n    key: 'onLoad',\n    value: function onLoad(callback) {\n      if (this.gapi) {\n        callback();\n      } else {\n        this.onLoadCallback = callback;\n      }\n    }\n    /**\r\n     * Sign out user google account\r\n     */\n\n  }, {\n    key: 'handleSignoutClick',\n    value: function handleSignoutClick() {\n      if (this.gapi) {\n        this.gapi.auth2.getAuthInstance().signOut();\n      } else {\n        console.log('Error: this.gapi not loaded');\n      }\n    }\n    /**\r\n     * List all events in the calendar\r\n     * @param {number} maxResults to see\r\n     * @param {string} calendarId to see by default use the calendar attribute\r\n     * @returns {any}\r\n     */\n\n  }, {\n    key: 'listUpcomingEvents',\n    value: function listUpcomingEvents(maxResults) {\n      var calendarId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.calendar;\n\n      if (this.gapi) {\n        return this.gapi.client.calendar.events.list({\n          calendarId: calendarId,\n          timeMin: new Date().toISOString(),\n          showDeleted: false,\n          singleEvents: true,\n          maxResults: maxResults,\n          orderBy: 'startTime'\n        });\n      } else {\n        console.log('Error: this.gapi not loaded');\n        return false;\n      }\n    }\n    /**\r\n     * List all events in the calendar queried by custom query options\r\n     * See all available options here https://developers.google.com/calendar/v3/reference/events/list\r\n     * @param {object} queryOptions to see\r\n     * @param {string} calendarId to see by default use the calendar attribute\r\n     * @returns {any}\r\n     */\n\n  }, {\n    key: 'listEvents',\n    value: function listEvents(queryOptions) {\n      var calendarId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.calendar;\n\n      if (this.gapi) {\n        return this.gapi.client.calendar.events.list({\n          'calendarId': calendarId,\n          ...queryOptions\n        });\n      } else {\n        console.log('Error: this.gapi not loaded');\n        return false;\n      }\n    }\n    /**\r\n     * Create an event from the current time for a certain period\r\n     * @param {number} time in minutes for the event\r\n     * @param {string} summary of the event\r\n     * @param {string} description of the event\r\n     * @param {string} calendarId\r\n     * @param {string} timeZone The time zone in which the time is specified. (Formatted as an IANA Time Zone Database name, e.g. \"Europe/Zurich\".)\r\n     * @returns {any}\r\n     */\n\n  }, {\n    key: 'createEventFromNow',\n    value: function createEventFromNow(_ref) {\n      var time = _ref.time,\n          summary = _ref.summary,\n          _ref$description = _ref.description,\n          description = _ref$description === undefined ? '' : _ref$description;\n      var calendarId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.calendar;\n      var timeZone = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'Europe/Paris';\n      var event = {\n        summary: summary,\n        description: description,\n        start: {\n          dateTime: new Date().toISOString(),\n          timeZone: timeZone\n        },\n        end: {\n          dateTime: new Date(new Date().getTime() + time * 60000),\n          timeZone: timeZone\n        }\n      };\n      return this.createEvent(event, calendarId);\n    }\n    /**\r\n     * Create Calendar event\r\n     * @param {string} calendarId for the event.\r\n     * @param {object} event with start and end dateTime\r\n     * @returns {any}\r\n     */\n\n  }, {\n    key: 'createEvent',\n    value: function createEvent(event) {\n      var calendarId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.calendar;\n\n      if (this.gapi) {\n        return this.gapi.client.calendar.events.insert({\n          calendarId: calendarId,\n          resource: event\n        });\n      } else {\n        console.log('Error: gapi is not loaded use onLoad before please.');\n        return null;\n      }\n    }\n    /**\r\n     * Delete an event in the calendar.\r\n     * @param {string} eventId of the event to delete.\r\n     * @param {string} calendarId where the event is.\r\n     * @returns {any} Promise resolved when the event is deleted.\r\n     */\n\n  }, {\n    key: 'deleteEvent',\n    value: function deleteEvent(eventId) {\n      var calendarId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.calendar;\n\n      if (this.gapi) {\n        return this.gapi.client.calendar.events.delete({\n          calendarId: calendarId,\n          eventId: eventId\n        });\n      } else {\n        console.log('Error: gapi is not loaded use onLoad before please.');\n        return null;\n      }\n    }\n    /**\r\n     * @returns {any} Get the user's basic profile information. Documentation: https://developers.google.com/identity/sign-in/web/reference#googleusergetbasicprofile\r\n     */\n\n  }, {\n    key: 'getBasicUserProfile',\n    value: function getBasicUserProfile() {\n      if (this.gapi) {\n        return this.gapi.auth2.getAuthInstance().currentUser.get().getBasicProfile();\n      } else {\n        console.log('Error: gapi is not loaded use onLoad before please.');\n        return null;\n      }\n    }\n    /**\r\n     * Update Calendar event\r\n     * @param {string} calendarId for the event.\r\n     * @param {string} eventId of the event.\r\n     * @param {object} event with details to update, e.g. summary\r\n     * @returns {any}\r\n     */\n\n  }, {\n    key: 'updateEvent',\n    value: function updateEvent(event, eventId) {\n      var calendarId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.calendar;\n\n      if (this.gapi) {\n        return this.gapi.client.calendar.events.patch({\n          calendarId: calendarId,\n          eventId: eventId,\n          resource: event\n        });\n      } else {\n        console.log('Error: gapi is not loaded use onLoad before please.');\n        return null;\n      }\n    }\n    /**\r\n     * Get Calendar event\r\n     * @param {string} calendarId for the event.\r\n     * @param {string} eventId specifies individual event\r\n     * @returns {any}\r\n     */\n\n  }, {\n    key: 'getEvent',\n    value: function getEvent(eventId) {\n      var calendarId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.calendar;\n\n      if (this.gapi) {\n        return this.gapi.client.calendar.events.get({\n          calendarId: calendarId,\n          eventId: eventId\n        });\n      } else {\n        console.log('Error: gapi is not loaded use onLoad before please.');\n        return null;\n      }\n    }\n  }]);\n\n  return ApiCalendar;\n}();\n\nvar apiCalendar = void 0;\n\ntry {\n  apiCalendar = new ApiCalendar();\n} catch (e) {\n  console.log(e);\n}\n\nexports.default = apiCalendar;","map":{"version":3,"sources":["C:/Users/coren/Desktop/ING4 S7/TECHNO WEB/PROJET/PROJECT_WEB_OCRES/frontend/node_modules/react-google-calendar-api/build/ApiCalendar.js"],"names":["Object","defineProperty","exports","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_classCallCheck","instance","TypeError","Config","require","ApiCalendar","sign","gapi","onLoadCallback","calendar","updateSigninStatus","bind","initClient","handleSignoutClick","handleAuthClick","createEvent","listUpcomingEvents","listEvents","createEventFromNow","listenSign","onLoad","setCalendar","updateEvent","deleteEvent","getEvent","getBasicUserProfile","handleClientLoad","e","console","log","isSignedIn","_this","window","client","init","then","auth2","getAuthInstance","listen","get","catch","_this2","script","document","createElement","src","body","appendChild","onload","load","signIn","newCalendar","callback","signOut","maxResults","calendarId","arguments","undefined","events","list","timeMin","Date","toISOString","showDeleted","singleEvents","orderBy","queryOptions","_ref","time","summary","_ref$description","description","timeZone","event","start","dateTime","end","getTime","insert","resource","eventId","delete","currentUser","getBasicProfile","patch","apiCalendar","default"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;;AAIA,IAAIC,YAAY,GAAG,YAAY;AAAE,WAASC,gBAAT,CAA0BC,MAA1B,EAAkCC,KAAlC,EAAyC;AAAE,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACE,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AAAE,UAAIE,UAAU,GAAGH,KAAK,CAACC,CAAD,CAAtB;AAA2BE,MAAAA,UAAU,CAACC,UAAX,GAAwBD,UAAU,CAACC,UAAX,IAAyB,KAAjD;AAAwDD,MAAAA,UAAU,CAACE,YAAX,GAA0B,IAA1B;AAAgC,UAAI,WAAWF,UAAf,EAA2BA,UAAU,CAACG,QAAX,GAAsB,IAAtB;AAA4Bb,MAAAA,MAAM,CAACC,cAAP,CAAsBK,MAAtB,EAA8BI,UAAU,CAACI,GAAzC,EAA8CJ,UAA9C;AAA4D;AAAE;;AAAC,SAAO,UAAUK,WAAV,EAAuBC,UAAvB,EAAmCC,WAAnC,EAAgD;AAAE,QAAID,UAAJ,EAAgBX,gBAAgB,CAACU,WAAW,CAACG,SAAb,EAAwBF,UAAxB,CAAhB;AAAqD,QAAIC,WAAJ,EAAiBZ,gBAAgB,CAACU,WAAD,EAAcE,WAAd,CAAhB;AAA4C,WAAOF,WAAP;AAAqB,GAAhN;AAAmN,CAA9hB,EAAnB;;AAEA,SAASI,eAAT,CAAyBC,QAAzB,EAAmCL,WAAnC,EAAgD;AAAE,MAAI,EAAEK,QAAQ,YAAYL,WAAtB,CAAJ,EAAwC;AAAE,UAAM,IAAIM,SAAJ,CAAc,mCAAd,CAAN;AAA2D;AAAE;;AAEzJ,IAAIC,MAAM,GAAGC,OAAO,CAAC,+BAAD,CAApB;;AAEA,IAAIC,WAAW,GAAG,YAAY;AAC5B,WAASA,WAAT,GAAuB;AACrBL,IAAAA,eAAe,CAAC,IAAD,EAAOK,WAAP,CAAf;;AAEA,SAAKC,IAAL,GAAY,KAAZ;AACA,SAAKC,IAAL,GAAY,IAAZ;AACA,SAAKC,cAAL,GAAsB,IAAtB;AACA,SAAKC,QAAL,GAAgB,SAAhB;;AACA,QAAI;AACF,WAAKC,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBC,IAAxB,CAA6B,IAA7B,CAA1B;AACA,WAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBD,IAAhB,CAAqB,IAArB,CAAlB;AACA,WAAKE,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBF,IAAxB,CAA6B,IAA7B,CAA1B;AACA,WAAKG,eAAL,GAAuB,KAAKA,eAAL,CAAqBH,IAArB,CAA0B,IAA1B,CAAvB;AACA,WAAKI,WAAL,GAAmB,KAAKA,WAAL,CAAiBJ,IAAjB,CAAsB,IAAtB,CAAnB;AACA,WAAKK,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBL,IAAxB,CAA6B,IAA7B,CAA1B;AACA,WAAKM,UAAL,GAAkB,KAAKA,UAAL,CAAgBN,IAAhB,CAAqB,IAArB,CAAlB;AACA,WAAKO,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBP,IAAxB,CAA6B,IAA7B,CAA1B;AACA,WAAKQ,UAAL,GAAkB,KAAKA,UAAL,CAAgBR,IAAhB,CAAqB,IAArB,CAAlB;AACA,WAAKS,MAAL,GAAc,KAAKA,MAAL,CAAYT,IAAZ,CAAiB,IAAjB,CAAd;AACA,WAAKU,WAAL,GAAmB,KAAKA,WAAL,CAAiBV,IAAjB,CAAsB,IAAtB,CAAnB;AACA,WAAKW,WAAL,GAAmB,KAAKA,WAAL,CAAiBX,IAAjB,CAAsB,IAAtB,CAAnB;AACA,WAAKY,WAAL,GAAmB,KAAKA,WAAL,CAAiBZ,IAAjB,CAAsB,IAAtB,CAAnB;AACA,WAAKa,QAAL,GAAgB,KAAKA,QAAL,CAAcb,IAAd,CAAmB,IAAnB,CAAhB;AACA,WAAKc,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBd,IAAzB,CAA8B,IAA9B,CAA3B;AACA,WAAKe,gBAAL;AACD,KAjBD,CAiBE,OAAOC,CAAP,EAAU;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD;AACF;AACD;AACF;AACA;AACA;;;AAGE1C,EAAAA,YAAY,CAACoB,WAAD,EAAc,CAAC;AACzBV,IAAAA,GAAG,EAAE,oBADoB;AAEzBX,IAAAA,KAAK,EAAE,SAAS0B,kBAAT,CAA4BoB,UAA5B,EAAwC;AAC7C,WAAKxB,IAAL,GAAYwB,UAAZ;AACD;AACD;AACJ;AACA;;AAP6B,GAAD,EASvB;AACDnC,IAAAA,GAAG,EAAE,YADJ;AAEDX,IAAAA,KAAK,EAAE,SAAS4B,UAAT,GAAsB;AAC3B,UAAImB,KAAK,GAAG,IAAZ;;AAEA,WAAKxB,IAAL,GAAYyB,MAAM,CAAC,MAAD,CAAlB;AACA,WAAKzB,IAAL,CAAU0B,MAAV,CAAiBC,IAAjB,CAAsB/B,MAAtB,EAA8BgC,IAA9B,CAAmC,YAAY;AAC7C;AACAJ,QAAAA,KAAK,CAACxB,IAAN,CAAW6B,KAAX,CAAiBC,eAAjB,GAAmCP,UAAnC,CAA8CQ,MAA9C,CAAqDP,KAAK,CAACrB,kBAA3D,EAF6C,CAG7C;;;AACAqB,QAAAA,KAAK,CAACrB,kBAAN,CAAyBqB,KAAK,CAACxB,IAAN,CAAW6B,KAAX,CAAiBC,eAAjB,GAAmCP,UAAnC,CAA8CS,GAA9C,EAAzB;;AACA,YAAIR,KAAK,CAACvB,cAAV,EAA0B;AACxBuB,UAAAA,KAAK,CAACvB,cAAN;AACD;AACF,OARD,EAQGgC,KARH,CAQS,UAAUb,CAAV,EAAa;AACpBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD,OAVD;AAWD;AACD;AACJ;AACA;AACA;;AArBK,GATuB,EAgCvB;AACDhC,IAAAA,GAAG,EAAE,kBADJ;AAEDX,IAAAA,KAAK,EAAE,SAAS0C,gBAAT,GAA4B;AACjC,UAAIe,MAAM,GAAG,IAAb;;AAEA,WAAKlC,IAAL,GAAYyB,MAAM,CAAC,MAAD,CAAlB;AACA,UAAIU,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAb;AACAF,MAAAA,MAAM,CAACG,GAAP,GAAa,mCAAb;AACAF,MAAAA,QAAQ,CAACG,IAAT,CAAcC,WAAd,CAA0BL,MAA1B;;AACAA,MAAAA,MAAM,CAACM,MAAP,GAAgB,YAAY;AAC1BhB,QAAAA,MAAM,CAAC,MAAD,CAAN,CAAeiB,IAAf,CAAoB,cAApB,EAAoCR,MAAM,CAAC7B,UAA3C;AACD,OAFD;AAGD;AACD;AACJ;AACA;;AAfK,GAhCuB,EAiDvB;AACDjB,IAAAA,GAAG,EAAE,iBADJ;AAEDX,IAAAA,KAAK,EAAE,SAAS8B,eAAT,GAA2B;AAChC,UAAI,KAAKP,IAAT,EAAe;AACb,aAAKA,IAAL,CAAU6B,KAAV,CAAgBC,eAAhB,GAAkCa,MAAlC;AACD,OAFD,MAEO;AACLtB,QAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACD;AACF;AACD;AACJ;AACA;AACA;;AAZK,GAjDuB,EA+DvB;AACDlC,IAAAA,GAAG,EAAE,aADJ;AAEDX,IAAAA,KAAK,EAAE,SAASqC,WAAT,CAAqB8B,WAArB,EAAkC;AACvC,WAAK1C,QAAL,GAAgB0C,WAAhB;AACD;AACD;AACJ;AACA;AACA;;AARK,GA/DuB,EAyEvB;AACDxD,IAAAA,GAAG,EAAE,YADJ;AAEDX,IAAAA,KAAK,EAAE,SAASmC,UAAT,CAAoBiC,QAApB,EAA8B;AACnC,UAAI,KAAK7C,IAAT,EAAe;AACb,aAAKA,IAAL,CAAU6B,KAAV,CAAgBC,eAAhB,GAAkCP,UAAlC,CAA6CQ,MAA7C,CAAoDc,QAApD;AACD,OAFD,MAEO;AACLxB,QAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACD;AACF;AACD;AACJ;AACA;AACA;;AAZK,GAzEuB,EAuFvB;AACDlC,IAAAA,GAAG,EAAE,QADJ;AAEDX,IAAAA,KAAK,EAAE,SAASoC,MAAT,CAAgBgC,QAAhB,EAA0B;AAC/B,UAAI,KAAK7C,IAAT,EAAe;AACb6C,QAAAA,QAAQ;AACT,OAFD,MAEO;AACL,aAAK5C,cAAL,GAAsB4C,QAAtB;AACD;AACF;AACD;AACJ;AACA;;AAXK,GAvFuB,EAoGvB;AACDzD,IAAAA,GAAG,EAAE,oBADJ;AAEDX,IAAAA,KAAK,EAAE,SAAS6B,kBAAT,GAA8B;AACnC,UAAI,KAAKN,IAAT,EAAe;AACb,aAAKA,IAAL,CAAU6B,KAAV,CAAgBC,eAAhB,GAAkCgB,OAAlC;AACD,OAFD,MAEO;AACLzB,QAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACD;AACF;AACD;AACJ;AACA;AACA;AACA;AACA;;AAdK,GApGuB,EAoHvB;AACDlC,IAAAA,GAAG,EAAE,oBADJ;AAEDX,IAAAA,KAAK,EAAE,SAASgC,kBAAT,CAA4BsC,UAA5B,EAAwC;AAC7C,UAAIC,UAAU,GAAGC,SAAS,CAAClE,MAAV,GAAmB,CAAnB,IAAwBkE,SAAS,CAAC,CAAD,CAAT,KAAiBC,SAAzC,GAAqDD,SAAS,CAAC,CAAD,CAA9D,GAAoE,KAAK/C,QAA1F;;AAEA,UAAI,KAAKF,IAAT,EAAe;AACb,eAAO,KAAKA,IAAL,CAAU0B,MAAV,CAAiBxB,QAAjB,CAA0BiD,MAA1B,CAAiCC,IAAjC,CAAsC;AAC3CJ,UAAAA,UAAU,EAAEA,UAD+B;AAE3CK,UAAAA,OAAO,EAAE,IAAIC,IAAJ,GAAWC,WAAX,EAFkC;AAG3CC,UAAAA,WAAW,EAAE,KAH8B;AAI3CC,UAAAA,YAAY,EAAE,IAJ6B;AAK3CV,UAAAA,UAAU,EAAEA,UAL+B;AAM3CW,UAAAA,OAAO,EAAE;AANkC,SAAtC,CAAP;AAQD,OATD,MASO;AACLrC,QAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACA,eAAO,KAAP;AACD;AACF;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;AAzBK,GApHuB,EA+IvB;AACDlC,IAAAA,GAAG,EAAE,YADJ;AAEDX,IAAAA,KAAK,EAAE,SAASiC,UAAT,CAAoBiD,YAApB,EAAkC;AACrC,UAAIX,UAAU,GAAGC,SAAS,CAAClE,MAAV,GAAmB,CAAnB,IAAwBkE,SAAS,CAAC,CAAD,CAAT,KAAiBC,SAAzC,GAAqDD,SAAS,CAAC,CAAD,CAA9D,GAAoE,KAAK/C,QAA1F;;AAEA,UAAI,KAAKF,IAAT,EAAe;AACX,eAAO,KAAKA,IAAL,CAAU0B,MAAV,CAAiBxB,QAAjB,CAA0BiD,MAA1B,CAAiCC,IAAjC,CAAsC;AACzC,wBAAcJ,UAD2B;AAEzC,aAAGW;AAFsC,SAAtC,CAAP;AAIH,OALD,MAKO;AACHtC,QAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACA,eAAO,KAAP;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAvBK,GA/IuB,EAwKvB;AACDlC,IAAAA,GAAG,EAAE,oBADJ;AAEDX,IAAAA,KAAK,EAAE,SAASkC,kBAAT,CAA4BiD,IAA5B,EAAkC;AACvC,UAAIC,IAAI,GAAGD,IAAI,CAACC,IAAhB;AAAA,UACIC,OAAO,GAAGF,IAAI,CAACE,OADnB;AAAA,UAEIC,gBAAgB,GAAGH,IAAI,CAACI,WAF5B;AAAA,UAGIA,WAAW,GAAGD,gBAAgB,KAAKb,SAArB,GAAiC,EAAjC,GAAsCa,gBAHxD;AAIA,UAAIf,UAAU,GAAGC,SAAS,CAAClE,MAAV,GAAmB,CAAnB,IAAwBkE,SAAS,CAAC,CAAD,CAAT,KAAiBC,SAAzC,GAAqDD,SAAS,CAAC,CAAD,CAA9D,GAAoE,KAAK/C,QAA1F;AACA,UAAI+D,QAAQ,GAAGhB,SAAS,CAAClE,MAAV,GAAmB,CAAnB,IAAwBkE,SAAS,CAAC,CAAD,CAAT,KAAiBC,SAAzC,GAAqDD,SAAS,CAAC,CAAD,CAA9D,GAAoE,cAAnF;AAEA,UAAIiB,KAAK,GAAG;AACVJ,QAAAA,OAAO,EAAEA,OADC;AAEVE,QAAAA,WAAW,EAAEA,WAFH;AAGVG,QAAAA,KAAK,EAAE;AACLC,UAAAA,QAAQ,EAAE,IAAId,IAAJ,GAAWC,WAAX,EADL;AAELU,UAAAA,QAAQ,EAAEA;AAFL,SAHG;AAOVI,QAAAA,GAAG,EAAE;AACHD,UAAAA,QAAQ,EAAE,IAAId,IAAJ,CAAS,IAAIA,IAAJ,GAAWgB,OAAX,KAAuBT,IAAI,GAAG,KAAvC,CADP;AAEHI,UAAAA,QAAQ,EAAEA;AAFP;AAPK,OAAZ;AAYA,aAAO,KAAKzD,WAAL,CAAiB0D,KAAjB,EAAwBlB,UAAxB,CAAP;AACD;AACD;AACJ;AACA;AACA;AACA;AACA;;AA7BK,GAxKuB,EAuMvB;AACD5D,IAAAA,GAAG,EAAE,aADJ;AAEDX,IAAAA,KAAK,EAAE,SAAS+B,WAAT,CAAqB0D,KAArB,EAA4B;AACjC,UAAIlB,UAAU,GAAGC,SAAS,CAAClE,MAAV,GAAmB,CAAnB,IAAwBkE,SAAS,CAAC,CAAD,CAAT,KAAiBC,SAAzC,GAAqDD,SAAS,CAAC,CAAD,CAA9D,GAAoE,KAAK/C,QAA1F;;AAEA,UAAI,KAAKF,IAAT,EAAe;AACb,eAAO,KAAKA,IAAL,CAAU0B,MAAV,CAAiBxB,QAAjB,CAA0BiD,MAA1B,CAAiCoB,MAAjC,CAAwC;AAC7CvB,UAAAA,UAAU,EAAEA,UADiC;AAE7CwB,UAAAA,QAAQ,EAAEN;AAFmC,SAAxC,CAAP;AAID,OALD,MAKO;AACL7C,QAAAA,OAAO,CAACC,GAAR,CAAY,qDAAZ;AACA,eAAO,IAAP;AACD;AACF;AAED;AACJ;AACA;AACA;AACA;AACA;;AArBK,GAvMuB,EA8NvB;AACDlC,IAAAA,GAAG,EAAE,aADJ;AAEDX,IAAAA,KAAK,EAAE,SAASuC,WAAT,CAAqByD,OAArB,EAA8B;AACnC,UAAIzB,UAAU,GAAGC,SAAS,CAAClE,MAAV,GAAmB,CAAnB,IAAwBkE,SAAS,CAAC,CAAD,CAAT,KAAiBC,SAAzC,GAAqDD,SAAS,CAAC,CAAD,CAA9D,GAAoE,KAAK/C,QAA1F;;AAEA,UAAI,KAAKF,IAAT,EAAe;AACb,eAAO,KAAKA,IAAL,CAAU0B,MAAV,CAAiBxB,QAAjB,CAA0BiD,MAA1B,CAAiCuB,MAAjC,CAAwC;AAC7C1B,UAAAA,UAAU,EAAEA,UADiC;AAE7CyB,UAAAA,OAAO,EAAEA;AAFoC,SAAxC,CAAP;AAID,OALD,MAKO;AACLpD,QAAAA,OAAO,CAACC,GAAR,CAAY,qDAAZ;AACA,eAAO,IAAP;AACD;AACF;AAED;AACJ;AACA;;AAlBK,GA9NuB,EAkPvB;AACDlC,IAAAA,GAAG,EAAE,qBADJ;AAEDX,IAAAA,KAAK,EAAE,SAASyC,mBAAT,GAA+B;AACpC,UAAI,KAAKlB,IAAT,EAAe;AACb,eAAO,KAAKA,IAAL,CAAU6B,KAAV,CAAgBC,eAAhB,GAAkC6C,WAAlC,CAA8C3C,GAA9C,GAAoD4C,eAApD,EAAP;AACD,OAFD,MAEO;AACLvD,QAAAA,OAAO,CAACC,GAAR,CAAY,qDAAZ;AACA,eAAO,IAAP;AACD;AACF;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;;AAjBK,GAlPuB,EAqQvB;AACDlC,IAAAA,GAAG,EAAE,aADJ;AAEDX,IAAAA,KAAK,EAAE,SAASsC,WAAT,CAAqBmD,KAArB,EAA4BO,OAA5B,EAAqC;AAC1C,UAAIzB,UAAU,GAAGC,SAAS,CAAClE,MAAV,GAAmB,CAAnB,IAAwBkE,SAAS,CAAC,CAAD,CAAT,KAAiBC,SAAzC,GAAqDD,SAAS,CAAC,CAAD,CAA9D,GAAoE,KAAK/C,QAA1F;;AAEA,UAAI,KAAKF,IAAT,EAAe;AACb,eAAO,KAAKA,IAAL,CAAU0B,MAAV,CAAiBxB,QAAjB,CAA0BiD,MAA1B,CAAiC0B,KAAjC,CAAuC;AAC5C7B,UAAAA,UAAU,EAAEA,UADgC;AAE5CyB,UAAAA,OAAO,EAAEA,OAFmC;AAG5CD,UAAAA,QAAQ,EAAEN;AAHkC,SAAvC,CAAP;AAKD,OAND,MAMO;AACL7C,QAAAA,OAAO,CAACC,GAAR,CAAY,qDAAZ;AACA,eAAO,IAAP;AACD;AACF;AAED;AACJ;AACA;AACA;AACA;AACA;;AAtBK,GArQuB,EA6RvB;AACDlC,IAAAA,GAAG,EAAE,UADJ;AAEDX,IAAAA,KAAK,EAAE,SAASwC,QAAT,CAAkBwD,OAAlB,EAA2B;AAChC,UAAIzB,UAAU,GAAGC,SAAS,CAAClE,MAAV,GAAmB,CAAnB,IAAwBkE,SAAS,CAAC,CAAD,CAAT,KAAiBC,SAAzC,GAAqDD,SAAS,CAAC,CAAD,CAA9D,GAAoE,KAAK/C,QAA1F;;AAEA,UAAI,KAAKF,IAAT,EAAe;AACb,eAAO,KAAKA,IAAL,CAAU0B,MAAV,CAAiBxB,QAAjB,CAA0BiD,MAA1B,CAAiCnB,GAAjC,CAAqC;AAC1CgB,UAAAA,UAAU,EAAEA,UAD8B;AAE1CyB,UAAAA,OAAO,EAAEA;AAFiC,SAArC,CAAP;AAID,OALD,MAKO;AACLpD,QAAAA,OAAO,CAACC,GAAR,CAAY,qDAAZ;AACA,eAAO,IAAP;AACD;AACF;AAdA,GA7RuB,CAAd,CAAZ;;AA8SA,SAAOxB,WAAP;AACD,CAlViB,EAAlB;;AAoVA,IAAIgF,WAAW,GAAG,KAAK,CAAvB;;AACA,IAAI;AACFA,EAAAA,WAAW,GAAG,IAAIhF,WAAJ,EAAd;AACD,CAFD,CAEE,OAAOsB,CAAP,EAAU;AACVC,EAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD;;AACD5C,OAAO,CAACuG,OAAR,GAAkBD,WAAlB","sourcesContent":["'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\n\r\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\r\n\r\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\nvar Config = require('../../../apiGoogleconfig.json');\r\n\r\nvar ApiCalendar = function () {\r\n  function ApiCalendar() {\r\n    _classCallCheck(this, ApiCalendar);\r\n\r\n    this.sign = false;\r\n    this.gapi = null;\r\n    this.onLoadCallback = null;\r\n    this.calendar = 'primary';\r\n    try {\r\n      this.updateSigninStatus = this.updateSigninStatus.bind(this);\r\n      this.initClient = this.initClient.bind(this);\r\n      this.handleSignoutClick = this.handleSignoutClick.bind(this);\r\n      this.handleAuthClick = this.handleAuthClick.bind(this);\r\n      this.createEvent = this.createEvent.bind(this);\r\n      this.listUpcomingEvents = this.listUpcomingEvents.bind(this);\r\n      this.listEvents = this.listEvents.bind(this);\r\n      this.createEventFromNow = this.createEventFromNow.bind(this);\r\n      this.listenSign = this.listenSign.bind(this);\r\n      this.onLoad = this.onLoad.bind(this);\r\n      this.setCalendar = this.setCalendar.bind(this);\r\n      this.updateEvent = this.updateEvent.bind(this);\r\n      this.deleteEvent = this.deleteEvent.bind(this);\r\n      this.getEvent = this.getEvent.bind(this);\r\n      this.getBasicUserProfile = this.getBasicUserProfile.bind(this);\r\n      this.handleClientLoad();\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n  /**\r\n   * Update connection status.\r\n   * @param {boolean} isSignedIn\r\n   */\r\n\r\n\r\n  _createClass(ApiCalendar, [{\r\n    key: 'updateSigninStatus',\r\n    value: function updateSigninStatus(isSignedIn) {\r\n      this.sign = isSignedIn;\r\n    }\r\n    /**\r\n     * Auth to the google Api.\r\n     */\r\n\r\n  }, {\r\n    key: 'initClient',\r\n    value: function initClient() {\r\n      var _this = this;\r\n\r\n      this.gapi = window['gapi'];\r\n      this.gapi.client.init(Config).then(function () {\r\n        // Listen for sign-in state changes.\r\n        _this.gapi.auth2.getAuthInstance().isSignedIn.listen(_this.updateSigninStatus);\r\n        // Handle the initial sign-in state.\r\n        _this.updateSigninStatus(_this.gapi.auth2.getAuthInstance().isSignedIn.get());\r\n        if (_this.onLoadCallback) {\r\n          _this.onLoadCallback();\r\n        }\r\n      }).catch(function (e) {\r\n        console.log(e);\r\n      });\r\n    }\r\n    /**\r\n     * Init Google Api\r\n     * And create gapi in global\r\n     */\r\n\r\n  }, {\r\n    key: 'handleClientLoad',\r\n    value: function handleClientLoad() {\r\n      var _this2 = this;\r\n\r\n      this.gapi = window['gapi'];\r\n      var script = document.createElement('script');\r\n      script.src = 'https://apis.google.com/js/api.js';\r\n      document.body.appendChild(script);\r\n      script.onload = function () {\r\n        window['gapi'].load('client:auth2', _this2.initClient);\r\n      };\r\n    }\r\n    /**\r\n     * Sign in Google user account\r\n     */\r\n\r\n  }, {\r\n    key: 'handleAuthClick',\r\n    value: function handleAuthClick() {\r\n      if (this.gapi) {\r\n        this.gapi.auth2.getAuthInstance().signIn();\r\n      } else {\r\n        console.log('Error: this.gapi not loaded');\r\n      }\r\n    }\r\n    /**\r\n     * Set the default attribute calendar\r\n     * @param {string} newCalendar\r\n     */\r\n\r\n  }, {\r\n    key: 'setCalendar',\r\n    value: function setCalendar(newCalendar) {\r\n      this.calendar = newCalendar;\r\n    }\r\n    /**\r\n     * Execute the callback function when a user is disconnected or connected with the sign status.\r\n     * @param callback\r\n     */\r\n\r\n  }, {\r\n    key: 'listenSign',\r\n    value: function listenSign(callback) {\r\n      if (this.gapi) {\r\n        this.gapi.auth2.getAuthInstance().isSignedIn.listen(callback);\r\n      } else {\r\n        console.log('Error: this.gapi not loaded');\r\n      }\r\n    }\r\n    /**\r\n     * Execute the callback function when gapi is loaded\r\n     * @param callback\r\n     */\r\n\r\n  }, {\r\n    key: 'onLoad',\r\n    value: function onLoad(callback) {\r\n      if (this.gapi) {\r\n        callback();\r\n      } else {\r\n        this.onLoadCallback = callback;\r\n      }\r\n    }\r\n    /**\r\n     * Sign out user google account\r\n     */\r\n\r\n  }, {\r\n    key: 'handleSignoutClick',\r\n    value: function handleSignoutClick() {\r\n      if (this.gapi) {\r\n        this.gapi.auth2.getAuthInstance().signOut();\r\n      } else {\r\n        console.log('Error: this.gapi not loaded');\r\n      }\r\n    }\r\n    /**\r\n     * List all events in the calendar\r\n     * @param {number} maxResults to see\r\n     * @param {string} calendarId to see by default use the calendar attribute\r\n     * @returns {any}\r\n     */\r\n\r\n  }, {\r\n    key: 'listUpcomingEvents',\r\n    value: function listUpcomingEvents(maxResults) {\r\n      var calendarId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.calendar;\r\n\r\n      if (this.gapi) {\r\n        return this.gapi.client.calendar.events.list({\r\n          calendarId: calendarId,\r\n          timeMin: new Date().toISOString(),\r\n          showDeleted: false,\r\n          singleEvents: true,\r\n          maxResults: maxResults,\r\n          orderBy: 'startTime'\r\n        });\r\n      } else {\r\n        console.log('Error: this.gapi not loaded');\r\n        return false;\r\n      }\r\n    }\r\n    /**\r\n     * List all events in the calendar queried by custom query options\r\n     * See all available options here https://developers.google.com/calendar/v3/reference/events/list\r\n     * @param {object} queryOptions to see\r\n     * @param {string} calendarId to see by default use the calendar attribute\r\n     * @returns {any}\r\n     */\r\n\r\n  }, {\r\n    key: 'listEvents',\r\n    value: function listEvents(queryOptions) {\r\n        var calendarId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.calendar;\r\n\r\n        if (this.gapi) {\r\n            return this.gapi.client.calendar.events.list({\r\n                'calendarId': calendarId,\r\n                ...queryOptions\r\n            });\r\n        } else {\r\n            console.log('Error: this.gapi not loaded');\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Create an event from the current time for a certain period\r\n     * @param {number} time in minutes for the event\r\n     * @param {string} summary of the event\r\n     * @param {string} description of the event\r\n     * @param {string} calendarId\r\n     * @param {string} timeZone The time zone in which the time is specified. (Formatted as an IANA Time Zone Database name, e.g. \"Europe/Zurich\".)\r\n     * @returns {any}\r\n     */\r\n\r\n  }, {\r\n    key: 'createEventFromNow',\r\n    value: function createEventFromNow(_ref) {\r\n      var time = _ref.time,\r\n          summary = _ref.summary,\r\n          _ref$description = _ref.description,\r\n          description = _ref$description === undefined ? '' : _ref$description;\r\n      var calendarId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.calendar;\r\n      var timeZone = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'Europe/Paris';\r\n\r\n      var event = {\r\n        summary: summary,\r\n        description: description,\r\n        start: {\r\n          dateTime: new Date().toISOString(),\r\n          timeZone: timeZone\r\n        },\r\n        end: {\r\n          dateTime: new Date(new Date().getTime() + time * 60000),\r\n          timeZone: timeZone\r\n        }\r\n      };\r\n      return this.createEvent(event, calendarId);\r\n    }\r\n    /**\r\n     * Create Calendar event\r\n     * @param {string} calendarId for the event.\r\n     * @param {object} event with start and end dateTime\r\n     * @returns {any}\r\n     */\r\n\r\n  }, {\r\n    key: 'createEvent',\r\n    value: function createEvent(event) {\r\n      var calendarId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.calendar;\r\n\r\n      if (this.gapi) {\r\n        return this.gapi.client.calendar.events.insert({\r\n          calendarId: calendarId,\r\n          resource: event\r\n        });\r\n      } else {\r\n        console.log('Error: gapi is not loaded use onLoad before please.');\r\n        return null;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Delete an event in the calendar.\r\n     * @param {string} eventId of the event to delete.\r\n     * @param {string} calendarId where the event is.\r\n     * @returns {any} Promise resolved when the event is deleted.\r\n     */\r\n\r\n  }, {\r\n    key: 'deleteEvent',\r\n    value: function deleteEvent(eventId) {\r\n      var calendarId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.calendar;\r\n\r\n      if (this.gapi) {\r\n        return this.gapi.client.calendar.events.delete({\r\n          calendarId: calendarId,\r\n          eventId: eventId\r\n        });\r\n      } else {\r\n        console.log('Error: gapi is not loaded use onLoad before please.');\r\n        return null;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * @returns {any} Get the user's basic profile information. Documentation: https://developers.google.com/identity/sign-in/web/reference#googleusergetbasicprofile\r\n     */\r\n\r\n  }, {\r\n    key: 'getBasicUserProfile',\r\n    value: function getBasicUserProfile() {\r\n      if (this.gapi) {\r\n        return this.gapi.auth2.getAuthInstance().currentUser.get().getBasicProfile();\r\n      } else {\r\n        console.log('Error: gapi is not loaded use onLoad before please.');\r\n        return null;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Update Calendar event\r\n     * @param {string} calendarId for the event.\r\n     * @param {string} eventId of the event.\r\n     * @param {object} event with details to update, e.g. summary\r\n     * @returns {any}\r\n     */\r\n\r\n  }, {\r\n    key: 'updateEvent',\r\n    value: function updateEvent(event, eventId) {\r\n      var calendarId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.calendar;\r\n\r\n      if (this.gapi) {\r\n        return this.gapi.client.calendar.events.patch({\r\n          calendarId: calendarId,\r\n          eventId: eventId,\r\n          resource: event\r\n        });\r\n      } else {\r\n        console.log('Error: gapi is not loaded use onLoad before please.');\r\n        return null;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Get Calendar event\r\n     * @param {string} calendarId for the event.\r\n     * @param {string} eventId specifies individual event\r\n     * @returns {any}\r\n     */\r\n\r\n  }, {\r\n    key: 'getEvent',\r\n    value: function getEvent(eventId) {\r\n      var calendarId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.calendar;\r\n\r\n      if (this.gapi) {\r\n        return this.gapi.client.calendar.events.get({\r\n          calendarId: calendarId,\r\n          eventId: eventId\r\n        });\r\n      } else {\r\n        console.log('Error: gapi is not loaded use onLoad before please.');\r\n        return null;\r\n      }\r\n    }\r\n  }]);\r\n\r\n  return ApiCalendar;\r\n}();\r\n\r\nvar apiCalendar = void 0;\r\ntry {\r\n  apiCalendar = new ApiCalendar();\r\n} catch (e) {\r\n  console.log(e);\r\n}\r\nexports.default = apiCalendar;"]},"metadata":{},"sourceType":"script"}