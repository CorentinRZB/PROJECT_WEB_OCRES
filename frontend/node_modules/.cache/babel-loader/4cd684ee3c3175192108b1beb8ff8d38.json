{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\coren\\\\Desktop\\\\ING4 S7\\\\TECHNO WEB\\\\PROJET\\\\PROJECT_WEB_OCRES\\\\frontend\\\\src\\\\pages\\\\Sondages.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Scroll from '../components/Scroll';\nimport Logo from '../components/Logo';\nimport Navigation from '../components/Navigation';\nimport \"../style/pages/_sondages.scss\";\n\nconst Sondages = () => {\n  const [voteData, setVoteData] = useState();\n  const [totalVotes, setTotalVotes] = useState(0);\n  const [voted, setVoted] = useState(false);\n  const url = \"http://localhost:5000/sondages\";\n  useEffect(() => {\n    fetch(url).then(response => response.json()).then(data => {\n      setVoteData(data);\n      let sum = 0;\n      data.forEach(function (obj) {\n        sum += obj.votes;\n      });\n      setTotalVotes(sum);\n    });\n  }, []);\n\n  const submitVote = e => {\n    if (voted === false) {\n      const voteSelected = e.target.dataset.id;\n      const voteCurrent = voteData[voteSelected].votes;\n      voteData[voteSelected].votes = voteCurrent + 1;\n      setTotalVotes(totalVotes + 1);\n      setVoted(!voted);\n      const options = {\n        method: \"POST\",\n        body: JSON.stringify(voteData),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      fetch(url, options).then(res => res.json()).then(res => console.log(res));\n    }\n  };\n\n  let pollOptions;\n\n  if (voteData) {\n    pollOptions = voteData.map(item => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: item.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: submitVote,\n        \"data-id\": item.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }\n      }, item.option, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }\n      }, \"- \", item.votes, \" Votes\")));\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"poll\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Logo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, \"Which option do you like the best?\"), /*#__PURE__*/React.createElement(\"ul\", {\n    className: voted ? \"results\" : \"options\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, pollOptions), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, \"Total Votes: \", totalVotes), /*#__PURE__*/React.createElement(Navigation, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Scroll, {\n    left: '/structure',\n    right: '/contact',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Sondages;","map":{"version":3,"sources":["C:/Users/coren/Desktop/ING4 S7/TECHNO WEB/PROJET/PROJECT_WEB_OCRES/frontend/src/pages/Sondages.js"],"names":["React","useState","useEffect","Scroll","Logo","Navigation","Sondages","voteData","setVoteData","totalVotes","setTotalVotes","voted","setVoted","url","fetch","then","response","json","data","sum","forEach","obj","votes","submitVote","e","voteSelected","target","dataset","id","voteCurrent","options","method","body","JSON","stringify","headers","res","console","log","pollOptions","map","item","option"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Scroll from '../components/Scroll';\r\nimport Logo from '../components/Logo';\r\nimport Navigation from '../components/Navigation';\r\nimport \"../style/pages/_sondages.scss\";\r\n\r\nconst Sondages = () => {\r\n\r\n    const [voteData, setVoteData] = useState();\r\n    const [totalVotes, setTotalVotes] = useState(0);\r\n    const [voted, setVoted] = useState(false);\r\n\r\n    const url = \"http://localhost:5000/sondages\";\r\n    useEffect(() => {\r\n    fetch(url)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n    setVoteData(data);\r\n    let sum = 0;\r\n    data.forEach(function (obj) {\r\n    sum += obj.votes;\r\n    });\r\n      setTotalVotes(sum);\r\n    });\r\n}, []);\r\n\r\nconst submitVote = (e) => {\r\n    if(voted === false) {\r\n      const voteSelected = e.target.dataset.id;\r\n      const voteCurrent = voteData[voteSelected].votes;\r\n      voteData[voteSelected].votes = voteCurrent + 1;\r\n      setTotalVotes(totalVotes + 1);\r\n      setVoted(!voted);\r\n      const options = {\r\n        method: \"POST\",\r\n        body: JSON.stringify(voteData),\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n      };\r\n      fetch(url, options)\r\n        .then((res) => res.json())\r\n        .then((res) => console.log(res));\r\n    }\r\n  };\r\n  let pollOptions;\r\n  if (voteData) {\r\n    pollOptions = voteData.map((item) => {\r\n      return (\r\n        <li key={item.id}>\r\n          <button onClick={submitVote} data-id={item.id}>\r\n            {item.option}\r\n            <span>- {item.votes} Votes</span>\r\n          </button>          \r\n        </li>\r\n      );\r\n    });\r\n  }\r\n  return (\r\n    <div className=\"poll\">\r\n        <Logo />\r\n      <h1>Which option do you like the best?</h1>\r\n      <ul className={voted ? \"results\" : \"options\"}>\r\n        {pollOptions}\r\n      </ul>\r\n      <p>Total Votes: {totalVotes}</p>\r\n      <Navigation />\r\n      <Scroll left={'/structure'} right={'/contact'} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sondages;"]},"metadata":{},"sourceType":"module"}