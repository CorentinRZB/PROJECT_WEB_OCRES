{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arnau\\\\Desktop\\\\OCRES\\\\Dev Web\\\\Repository\\\\PROJECT_WEB_OCRES\\\\frontend\\\\src\\\\components\\\\D\\xE9compte.js\";\nimport React, { Component } from 'react';\n\nconst Décompte = _ref => {\n  let {\n    hoursMinSecs\n  } = _ref;\n  const {\n    hours = 0,\n    minutes = 0,\n    seconds = 60\n  } = hoursMinSecs;\n  const [[hrs, mins, secs], setTime] = React.useState([hours, minutes, seconds]);\n\n  const tick = () => {\n    if (hrs === 0 && mins === 0 && secs === 0) reset();else if (mins === 0 && secs === 0) {\n      setTime([hrs - 1, 59, 59]);\n    } else if (secs === 0) {\n      setTime([hrs, mins - 1, 59]);\n    } else {\n      setTime([hrs, mins, secs - 1]);\n    }\n  };\n\n  const reset = () => setTime([parseInt(hours), parseInt(minutes), parseInt(seconds)]);\n\n  React.useEffect(() => {\n    const timerId = setInterval(() => tick(), 1000);\n    return () => clearInterval(timerId);\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }\n  }, `${hrs.toString().padStart(2, '0')}:${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`));\n};\n\nexport default Décompte;","map":{"version":3,"sources":["C:/Users/arnau/Desktop/OCRES/Dev Web/Repository/PROJECT_WEB_OCRES/frontend/src/components/Décompte.js"],"names":["React","Component","Décompte","hoursMinSecs","hours","minutes","seconds","hrs","mins","secs","setTime","useState","tick","reset","parseInt","useEffect","timerId","setInterval","clearInterval","toString","padStart"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AAEA,MAAMC,QAAQ,GAAG,QAAoB;AAAA,MAAnB;AAACC,IAAAA;AAAD,GAAmB;AAElC,QAAM;AAAEC,IAAAA,KAAK,GAAG,CAAV;AAAaC,IAAAA,OAAO,GAAG,CAAvB;AAA0BC,IAAAA,OAAO,GAAG;AAApC,MAA2CH,YAAjD;AACA,QAAM,CAAC,CAACI,GAAD,EAAMC,IAAN,EAAYC,IAAZ,CAAD,EAAoBC,OAApB,IAA+BV,KAAK,CAACW,QAAN,CAAe,CAACP,KAAD,EAAQC,OAAR,EAAiBC,OAAjB,CAAf,CAArC;;AAGA,QAAMM,IAAI,GAAG,MAAM;AAEf,QAAIL,GAAG,KAAK,CAAR,IAAaC,IAAI,KAAK,CAAtB,IAA2BC,IAAI,KAAK,CAAxC,EACII,KAAK,GADT,KAEK,IAAIL,IAAI,KAAK,CAAT,IAAcC,IAAI,KAAK,CAA3B,EAA8B;AAC/BC,MAAAA,OAAO,CAAC,CAACH,GAAG,GAAG,CAAP,EAAU,EAAV,EAAc,EAAd,CAAD,CAAP;AACH,KAFI,MAEE,IAAIE,IAAI,KAAK,CAAb,EAAgB;AACnBC,MAAAA,OAAO,CAAC,CAACH,GAAD,EAAMC,IAAI,GAAG,CAAb,EAAgB,EAAhB,CAAD,CAAP;AACH,KAFM,MAEA;AACHE,MAAAA,OAAO,CAAC,CAACH,GAAD,EAAMC,IAAN,EAAYC,IAAI,GAAG,CAAnB,CAAD,CAAP;AACH;AACJ,GAXD;;AAcA,QAAMI,KAAK,GAAG,MAAMH,OAAO,CAAC,CAACI,QAAQ,CAACV,KAAD,CAAT,EAAkBU,QAAQ,CAACT,OAAD,CAA1B,EAAqCS,QAAQ,CAACR,OAAD,CAA7C,CAAD,CAA3B;;AAGAN,EAAAA,KAAK,CAACe,SAAN,CAAgB,MAAM;AAClB,UAAMC,OAAO,GAAGC,WAAW,CAAC,MAAML,IAAI,EAAX,EAAe,IAAf,CAA3B;AACA,WAAO,MAAMM,aAAa,CAACF,OAAD,CAA1B;AACH,GAHD;AAMA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK,GAAET,GAAG,CAACY,QAAJ,GAAeC,QAAf,CAAwB,CAAxB,EAA2B,GAA3B,CAAgC,IAAGZ,IAAI,CAC7CW,QADyC,GAEzCC,QAFyC,CAEhC,CAFgC,EAE7B,GAF6B,CAExB,IAAGX,IAAI,CAACU,QAAL,GAAgBC,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,CAAiC,EAFtD,CADJ,CADJ;AAOF,CApCD;;AAsCA,eAAelB,QAAf","sourcesContent":["import React, {Component} from 'react';\r\n\r\nconst Décompte = ({hoursMinSecs}) => {\r\n   \r\n   const { hours = 0, minutes = 0, seconds = 60 } = hoursMinSecs;\r\n   const [[hrs, mins, secs], setTime] = React.useState([hours, minutes, seconds]);\r\n   \r\n\r\n   const tick = () => {\r\n  \r\n       if (hrs === 0 && mins === 0 && secs === 0) \r\n           reset()\r\n       else if (mins === 0 && secs === 0) {\r\n           setTime([hrs - 1, 59, 59]);\r\n       } else if (secs === 0) {\r\n           setTime([hrs, mins - 1, 59]);\r\n       } else {\r\n           setTime([hrs, mins, secs - 1]);\r\n       }\r\n   };\r\n\r\n\r\n   const reset = () => setTime([parseInt(hours), parseInt(minutes), parseInt(seconds)]);\r\n\r\n   \r\n   React.useEffect(() => {\r\n       const timerId = setInterval(() => tick(), 1000);\r\n       return () => clearInterval(timerId);\r\n   });\r\n\r\n   \r\n   return (\r\n       <div>\r\n           <p>{`${hrs.toString().padStart(2, '0')}:${mins\r\n           .toString()\r\n           .padStart(2, '0')}:${secs.toString().padStart(2, '0')}`}</p> \r\n       </div>\r\n   );\r\n}\r\n\r\nexport default Décompte;"]},"metadata":{},"sourceType":"module"}